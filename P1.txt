pipeline {
    agent any

    environment {
        // Securely fetch the base64-encoded password from Jenkins credentials (replace with your Jenkins credentials ID)
        ENCODED_PWD = credentials('MY_SECRET_ENCODED_PASSWORD')
    }

    stages {
        stage('Decode Password') {
            steps {
                script {
                    // Verify the environment variable is set
                    if (env.ENCODED_PWD) {
                        // Decode the password using Groovy's Base64 class
                        byte[] decodedBytes = env.ENCODED_PWD.decodeBase64()
                        def decodedPassword = new String(decodedBytes, 'UTF-8')
                        echo "Decoded password: ${decodedPassword}"
                    } else {
                        error "Environment variable 'ENCODED_PWD' is not set."
                    }
                }
            }
        }
    }
}
---

 if (env.ENCODED_PWD) {
                        // Remove any non-base64 characters (newlines, spaces)
                        def cleanedEncodedPwd = sh(script: "echo '${env.ENCODED_PWD}' | tr -d '\\n' | tr -d ' '", returnStdout: true).trim()

                        // Check if the cleaned string is valid base64
                        def decodedPassword = sh(script: "echo ${cleanedEncodedPwd} | base64 --decode", returnStatus: true)
                        
                        // Handle decoding status
                        if (decodedPassword != 0) {
                            error "Base64 decoding failed: Invalid input."
                        } else {
                            echo "Decoded password successfully."
                        }
                    } 				
---					
