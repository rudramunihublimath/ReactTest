import React, { useState } from "react";

const App = () => {
  const [inputData, setInputData] = useState({ f1: "", f2: "", f3: "" });
  const [responseData, setResponseData] = useState(null);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setInputData((prevState) => ({
      ...prevState,
      [name]: value,
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await fetch("YOUR_BACKEND_API_URL", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(inputData),
      });

      if (!response.ok) {
        throw new Error("Network response was not ok");
      }

      const data = await response.json();
      setResponseData(data);
    } catch (error) {
      console.error("Error fetching data", error);
    }
  };

  return (
    <div>
      <form onSubmit={handleSubmit}>
        <div>
          <label>
            Field 1:
            <input type="text" name="f1" value={inputData.f1} onChange={handleChange} />
          </label>
        </div>
        <div>
          <label>
            Field 2:
            <input type="text" name="f2" value={inputData.f2} onChange={handleChange} />
          </label>
        </div>
        <div>
          <label>
            Field 3:
            <input type="text" name="f3" value={inputData.f3} onChange={handleChange} />
          </label>
        </div>
        <button type="submit">Submit</button>
      </form>

      {responseData && (
        <div>
          <h2>Response Data</h2>
          <h3>Reference Data</h3>
          <table border="1">
            <thead>
              <tr>
                <th>App ID</th>
                <th>App Name</th>
              </tr>
            </thead>
            <tbody>
              {responseData.referenceData.map((item, index) => (
                <tr key={index}>
                  <td>{item.app_id}</td>
                  <td>{item.app_name}</td>
                </tr>
              ))}
            </tbody>
          </table>

          <h3>Recommendation Data</h3>
          <table border="1">
            <thead>
              <tr>
                <th>Ref ID</th>
                <th>Design Pattern</th>
              </tr>
            </thead>
            <tbody>
              {responseData.recommendationData.map((item, index) => (
                <tr key={index}>
                  <td>{item.ref_id}</td>
                  <td>{item.design_pattern}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>
  );
};

export default App;
